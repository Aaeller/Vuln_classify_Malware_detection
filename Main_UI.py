# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'MainUI.ui'
#
# Created by: PyQt5 UI code generator 5.11.3
#
# WARNING! All changes made in this file will be lost!
import qtawesome
from PyQt5 import QtCore, QtGui, QtWidgets
import shutil
import predict as pd
import cv2
import B2M as bm
import sqrt_deal_pic as sp
class Ui_MainWindow(object):

    def mousePressEvent(self, event):
        self.pressX = event.x()    #记录鼠标按下的时候的坐标
        self.pressY = event.y()

    def mouseMoveEvent(self, event):
        x = event.x()
        y = event.y()   #获取移动后的坐标
        moveX = x-self.pressX
        moveY = y-self.pressY  #计算移动了多少
        positionX = self.frameGeometry().x() + moveX
        positionY = self.frameGeometry().y() + moveY    #计算移动后主窗口在桌面的位置
        self.move(positionX, positionY)    #移动主窗口




    def setupUi(self, MainWindow):
        self.pic_filename = None
        self.byte_filename = None
        self.setFixedSize(790,720)
        self.main_widget = QtWidgets.QWidget()  # 创建窗口主部件
        self.main_layout = QtWidgets.QGridLayout()  # 创建主部件的网格布局
        self.main_widget.setLayout(self.main_layout)  # 设置窗口主部件布局为网格布

        self.main_layout.setSpacing(0)

        self.top_widget = QtWidgets.QWidget()  # 创建头部部件
        self.top_widget.setObjectName('top_widget')
        self.top_layout = QtWidgets.QGridLayout()  # 创建头部部件的网格布局层
        self.top_widget.setLayout(self.top_layout) # 设置头部部件布局为网格
        self.top_layout.setSpacing(0)

        self.left_widget = QtWidgets.QWidget()  # 创建左侧部件
        self.left_widget.setObjectName('left_widget')
        self.left_layout = QtWidgets.QGridLayout()  # 创建左侧部件的网格布局层
        self.left_widget.setLayout(self.left_layout) # 设置左侧部件布局为网格

        self.main_layout.addWidget(self.left_widget,1,0,12,3) # 左侧部件在第1行第0列，占12行3列

        self.main_layout.addWidget(self.top_widget,0,0,1,900) # 头侧部件在第0行第0列，占1行13列
        # self.setCentralWidget(self.main_widget) # 设置窗口主部件
        self.left_layout.setVerticalSpacing(0);
        self.left_layout.setSpacing(0)

        MainWindow.setCentralWidget(self.main_widget)
        # self.menubar = QtWidgets.QMenuBar(self.top_widget)
        # self.menubar.setGeometry(QtCore.QRect(0, 0, 800, 23))
        # self.menubar.setObjectName("menubar")
        # self.menu = QtWidgets.QMenu(self.menubar)
        # self.menu.setObjectName("menu")
        # self.menu_2 = QtWidgets.QMenu(self.menu)
        # self.menu_2.setObjectName("menu_2")
        # self.menu_3 = QtWidgets.QMenu(self.menubar)
        # self.menu_3.setObjectName("menu_3")
        # MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(self.top_widget)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.action_2 = QtWidgets.QAction(self.top_widget)
        self.action_2.setObjectName("action_2")
        self.action_3 = QtWidgets.QAction(self.top_widget)
        self.action_3.setObjectName("action_3")
        self.action = QtWidgets.QAction(self.top_widget)
        self.action.setObjectName("action")
        # self.menu_2.addAction(self.action_2)
        # self.menu.addAction(self.menu_2.menuAction())
        # self.menu.addAction(self.action_3)
        # self.menu_3.addAction(self.action)
        # self.menubar.addAction(self.menu_3.menuAction())
        # self.menubar.addAction(self.menu.menuAction())


        self.left_out = QtWidgets.QPushButton(qtawesome.icon('fa.sign-out',color='#808080'),"退出")
        self.left_out.setObjectName('left_out')
        self.left_out.clicked.connect(self.close)
        self.top_layout.addWidget(self.left_out,0,16,100,800)
        self.setWindowFlag(QtCore.Qt.FramelessWindowHint) # 隐藏边框






        self.pushButton = QtWidgets.QPushButton(self.main_widget)
        self.pushButton.setGeometry(QtCore.QRect(600, 100, 81, 31))
        font = QtGui.QFont()
        font.setFamily("微软雅黑")
        font.setPointSize(15)
        self.pushButton.setFont(font)
        self.pushButton.setObjectName("pushButton")
        self.toolButton = QtWidgets.QToolButton(self.main_widget)
        self.toolButton.setGeometry(QtCore.QRect(550, 100, 45, 31))
        self.toolButton.setObjectName("toolButton")
        self.comboBox = QtWidgets.QLineEdit(self.main_widget)
        self.comboBox.setGeometry(QtCore.QRect(120, 100, 400, 31))
        self.comboBox.setObjectName("comboBox")
        font = QtGui.QFont()
        font.setFamily("微软雅黑")
        font.setPointSize(15)
        self.label_2 = QtWidgets.QLabel(self.main_widget)
        self.label_2.setGeometry(QtCore.QRect(140, 235, 111, 51))
        font = QtGui.QFont()
        font.setFamily("微软雅黑")
        font.setPointSize(16)
        self.label_2.setFont(font)
        self.label_2.setObjectName("label_2")
        self.graphicsView = QtWidgets.QGraphicsView(self.main_widget)
        self.graphicsView.setGeometry(QtCore.QRect(30, 280, 350, 300))
        self.graphicsView.setObjectName("graphicsView")
        self.label_3 = QtWidgets.QLabel(self.main_widget)
        self.label_3.setGeometry(QtCore.QRect(490, 235, 121, 51))
        font = QtGui.QFont()
        font.setFamily("微软雅黑")
        font.setPointSize(15)
        self.label_3.setFont(font)
        self.label_3.setObjectName("label_3")
        # self.line = QtWidgets.QFrame(self.main_widget)
        # self.line.setGeometry(QtCore.QRect(190, 370, 401, 35))
        # self.line.setFrameShape(QtWidgets.QFrame.HLine)
        # self.line.setFrameShadow(QtWidgets.QFrame.Sunken)
        # self.line.setObjectName("line")
        # self.line_2 = QtWidgets.QFrame(self.main_widget)
        # self.line_2.setGeometry(QtCore.QRect(190, 120, 401, 16))
        # self.line_2.setFrameShape(QtWidgets.QFrame.HLine)
        # self.line_2.setFrameShadow(QtWidgets.QFrame.Sunken)
        # self.line_2.setObjectName("line_2")
        self.plainTextEdit = QtWidgets.QPlainTextEdit(self.main_widget)
        self.plainTextEdit.setGeometry(QtCore.QRect(400, 280, 300, 31))
        self.plainTextEdit.setObjectName("plainTextEdit")
        #self.plainTextEdit.setEnabled(False)
        self.label_4 = QtWidgets.QLabel(self.main_widget)
        self.label_4.setGeometry(QtCore.QRect(505, 330, 101, 41))
        font = QtGui.QFont()
        font.setFamily("微软雅黑")
        font.setPointSize(15)
        self.label_4.setFont(font)
        self.label_4.setObjectName("label_4")
        self.plainTextEdit_2 = QtWidgets.QPlainTextEdit(self.main_widget)
        self.plainTextEdit_2.setGeometry(QtCore.QRect(400, 380, 300, 198))
        self.plainTextEdit_2.setObjectName("plainTextEdit_2")
        #self.plainTextEdit_2.setEnabled(False)


        self.main_layout.setContentsMargins(0,0,0,0);


        self.top_widget.setStyleSheet(
            '''
            *{background-color:#303030;}
            QLabel{
            color:#ffffff;
            border:none;
            font-weight:600;
            font-size:16px;
            font-family:'微软雅黑';
             }
            QPushButton{
            color:#ffffff;
            border:none;
            font-weight:600;
            font-size:16px;
            font-family:'微软雅黑';
             }
            ''')


        self.pic_filename = None
        self.predict = None
        self.score = None

        self.retranslateUi(MainWindow)
        self.toolButton.clicked.connect(self.showDialog)
        self.pushButton.clicked.connect(self.show_pre)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "恶意代码分析"))
        self.pushButton.setText(_translate("MainWindow", "上传"))
        self.toolButton.setText(_translate("MainWindow", "..."))
        self.label_2.setText(_translate("MainWindow", "代码图像"))
        self.label_3.setText(_translate("MainWindow", "恶意代码类别"))
        self.label_4.setText(_translate("MainWindow", "类别描述"))
        # self.menu.setTitle(_translate("MainWindow", "查看"))
        # self.menu_2.setTitle(_translate("MainWindow", "可视化"))
        # self.menu_3.setTitle(_translate("MainWindow", "主功能"))
        # self.action_2.setText(_translate("MainWindow", "代码图像"))
        # self.action_3.setText(_translate("MainWindow", "恶意代码类别介绍"))
        # self.action.setText(_translate("MainWindow", "预测分类类别"))

    def showDialog(self):
        fname = QtWidgets.QFileDialog.getOpenFileName(self.main_widget, 'Open file', './example', "All Files (*);;Byte Files (*.bytes);;Exe Files(*.exe)")
        if fname[0].split('/')[-1].split('.')[-1] == 'bytes':
            self.comboBox.setText(fname[0])
            self.byte_filename = fname[0].split('/')[-1]
            #print(self.pic_filename)
            shutil.copyfile(fname[0], './test_file/bytes/' + self.byte_filename)
            self.pic_filename = sp.change_to_pic('./test_file/bytes',self.byte_filename,'./test_file/pic')
        elif fname[0].split('/')[-1].split('.')[-1] == 'exe':
            self.comboBox.setText(fname[0])
            self.byte_filename = fname[0].split('/')[-1]
            # print(self.pic_filename)
            shutil.copyfile(fname[0], './test_file/exe/' + self.byte_filename)
            self.pic_filename = bm.exe_to_pic('./test_file/exe',self.byte_filename,'./test_file/pic')
        elif fname[0]:
            QtWidgets.QMessageBox.information(self.main_widget, "警告", "只能上传以bytes或者exe结尾的文件", QtWidgets.QMessageBox.Yes)
    def show_pre(self):
        if self.pic_filename:
            pic_dir = './test_file/pic'
            wdir = './test_file/deal_pic'
            self.score, self.predict = pd.read_model(pic_dir, self.pic_filename, wdir)

            if self.score <= 12:
                self.predict = 9

            img_path = './test_file/pic/' + self.pic_filename
            #print(img_path)
            image = cv2.imread(img_path, cv2.IMREAD_GRAYSCALE)
            image = cv2.resize(image, (250, 200))

            frame = QtGui.QImage(image, 250, 250, QtGui.QImage.Format_Indexed8)
            pix = QtGui.QPixmap.fromImage(frame)
            self.item = QtWidgets.QGraphicsPixmapItem(pix)  # 创建像素图元
            self.scene = QtWidgets.QGraphicsScene()  # 创建场景
            self.scene.addItem(self.item)
            self.graphicsView.setScene(self.scene)  # 将场景添加至视图

            malware_family = ['Ramnit', 'Lollipop', 'Kelihos_ver3', 'Vundo', 'Simda', 'Tracur', 'Kelihos_ver1', 'Obfuscator.ACY', 'Gatak', '其他']
            self.plainTextEdit.setPlainText(malware_family[self.predict])

            describle_falmily = ['Virus：Win32 / Ramnit.B:是对感染Windows可执行文件和HTML文件并尝试允许远程访问的病毒的检测。详情请访问：https://www.microsoft.com/en-us/wdsi/threats/malware-encyclopedia-description?Name=Virus:Win32/Ramnit.B',
                                 'Adware:Win32/Lollipop:此广告软件程序会在您浏览网页时显示广告。它还可以重定向搜索引擎结果，监控您在PC上执行的操作，下载应用程序以及将有关PC的信息发送给黑客。详情请访问：https://www.microsoft.com/en-us/wdsi/threats/malware-encyclopedia-description?Name=Adware:Win32/Lollipop&threatId=198706',
                                 'Win32/Kelihos:是一个发布垃圾邮件的木马家族。垃圾邮件可能包含指向安装程序的超链接Win32/Kelihos恶意软件。恶意软件可以与远程服务器通信以交换用于执行各种任务的信息，包括发送垃圾邮件，捕获敏感信息或下载和执行任意文件。详情请访问：https://www.microsoft.com/en-us/wdsi/threats/malware-encyclopedia-description?Name=Win32/Kelihos&threatId=',
                                 'Win32 / Vundo:这种威胁是其一个组成部分 - 一系列程序可以提供“脱离上下文”的弹出式广告。他们还可以下载和运行文件。Vundo经常作为DLL文件传播，并在未经您同意的情况下作为浏览器帮助对象（BHO）安装在您的PC上。该系列还使用先进技术来避免检测和移除。详情请访问：https://www.microsoft.com/en-us/wdsi/threats/malware-encyclopedia-description?Name=Trojan:Win32/Vundo&threatId=100135',
                                 'MSIL / Simda:威胁可以为您的PC提供恶意黑客后门访问和控制。然后，他们可以窃取您的密码并收集有关您PC的信息。详情请访问：https://www.microsoft.com/en-us/wdsi/threats/malware-encyclopedia-description?Name=MSIL/Simda&threatId=',
                                 'Trojan：VBS / Tracur:是由TrojanDownloader：Win32 / Tracur.A删除的VBS组件。运行时，此脚本会将“ explorer.exe ”进程添加到Windows防火墙例外列表中，以故意降低系统安全设置。详情请访问：https://www.microsoft.com/en-us/wdsi/threats/malware-encyclopedia-description?Name=Trojan:VBS/Tracur&threatId=-2147338377',
                                 'Win32/Kelihos:是一个发布垃圾邮件的木马家族。垃圾邮件可能包含指向安装程序的超链接Win32/Kelihos恶意软件。恶意软件可以与远程服务器通信以交换用于执行各种任务的信息，包括发送垃圾邮件，捕获敏感信息或下载和执行任意文件。详情请访问：https://www.microsoft.com/en-us/wdsi/threats/malware-encyclopedia-description?Name=Win32/Kelihos&threatId=',
                                 'Win32/Obfuscator:这种威胁一直是“obfuscated“，这意味着它试图隐藏其目的，因此您的安全软件无法检测到它。混淆之下的恶意软件几乎可以用于任何目的。详情请访问：https://www.microsoft.com/en-us/wdsi/threats/malware-encyclopedia-description?Name=Win32/Obfuscator&threatId=',
                                 'Trojan:Win32/Gatak:这个木马收集有关您的PC的信息并将其发送给黑客。它可以作为密钥生成器应用程序的一部分到达您的PC，或者看起来是合法应用程序的更新。详情请访问：https://www.microsoft.com/en-us/wdsi/threats/malware-encyclopedia-description?Name=Trojan:Win32/Gatak&threatId=-2147289564',
                                 '拟合度小于阈值，属于未知文件类型'
                                 ]
            self.plainTextEdit_2.setPlainText(describle_falmily[self.predict])
            if self.score <= 12:
                self.score = None
        else:
            QtWidgets.QMessageBox.information(self.main_widget, "警告", "请上传文件",
                                              QtWidgets.QMessageBox.Yes)