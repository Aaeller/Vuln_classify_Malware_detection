import tensorflow as tf
import numpy as np


batch_size = 128

def _parse_record(example_proto):
    features = {'label': tf.io.FixedLenFeature([], tf.int64),
                'image': tf.io.FixedLenFeature([], tf.string),
                'pic_name':tf.io.FixedLenFeature([], tf.string)}
    parsed_features = tf.io.parse_single_example(example_proto, features)
    img = tf.decode_raw(parsed_features['image'], tf.float64)
    #img = tf.reshape(img, [1, 512, 1])
    label = tf.cast(parsed_features['label'], tf.int64)
    pic_name = parsed_features['pic_name']
    return pic_name, img, label

with tf.Session() as sess:
    filenames = ["train80_gist_eight_train.tfrecords"]
    dataSet = tf.data.TFRecordDataset(filenames)
    dataSet = dataSet.map(_parse_record)
    iterator = dataSet.make_one_shot_iterator()
    element = iterator.get_next()
    sess.run(tf.local_variables_initializer())
    for i in range(2):
        pic_name, image, label = sess.run(element)
        print(pic_name)
        print(image.shape)
        print(label)