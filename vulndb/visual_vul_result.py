# -*- coding: utf-8 -*-
import matplotlib.pyplot as plt
import numpy as np

fig=plt.figure(figsize=(10,8))
x1 = np.arange(100)
y1 = [0.58666664, 0.62666667, 0.65, 0.66333336, 0.68, 0.7033333, 0.7133333, 0.7266667, 0.75333333, 0.75333333, 0.7633333, 0.7633333, 0.78, 0.7966667, 0.7966667, 0.8066667, 0.81666666, 0.80333334, 0.8066667, 0.8066667, 0.80333334, 0.8233333, 0.82, 0.82666665, 0.82, 0.82, 0.82, 0.82, 0.8233333, 0.82, 0.83, 0.83, 0.81666666, 0.83666664, 0.83, 0.8333333, 0.84, 0.8433333, 0.84, 0.8433333, 0.8466667, 0.8433333, 0.84, 0.8433333, 0.8466667, 0.85333335, 0.8466667, 0.8433333, 0.8466667, 0.85333335, 0.8466667, 0.8466667, 0.8466667, 0.85, 0.85333335, 0.85333335, 0.85333335, 0.85, 0.8466667, 0.8466667, 0.84, 0.84, 0.85, 0.85, 0.8566667, 0.85333335, 0.85, 0.85, 0.8566667, 0.86333334, 0.86, 0.86, 0.86, 0.86, 0.86, 0.86, 0.86333334, 0.8666667, 0.8666667, 0.8666667, 0.8666667, 0.86333334, 0.86333334, 0.86333334, 0.86333334, 0.86333334, 0.86333334, 0.86333334, 0.86333334, 0.86333334, 0.86333334, 0.86333334, 0.87333333, 0.87, 0.87333333, 0.87, 0.87, 0.87333333, 0.87333333, 0.87]

# x2 = np.arange(100)
# y2 = [2.055776, 2.0145698, 2.0140595, 1.9960067, 1.9848582, 1.9815493, 1.966379, 1.9713155, 1.96495, 1.9551196, 1.952128, 1.9441601, 1.9420768, 1.936486, 1.9431199, 1.9421525, 1.933776, 1.9253422, 1.9288696, 1.9206508, 1.9258121, 1.9223477, 1.9046648, 1.9024001, 1.8955243, 1.8838997, 1.8854201, 1.9037429, 1.8818154, 1.881348, 1.88011, 1.8746085, 1.8750905, 1.8747778, 1.8796772, 1.8720775, 1.8742791, 1.884685, 1.8692216, 1.863255, 1.8661629, 1.8638816, 1.8572373, 1.8577524, 1.8566808, 1.8570343, 1.861825, 1.8532441, 1.8556669, 1.8529147, 1.85645, 1.8547823, 1.8557414, 1.854779, 1.8540341, 1.8525118, 1.8523883, 1.8570439, 1.85598, 1.8553703, 1.8535272, 1.8524477, 1.8521496, 1.8518887, 1.8527026, 1.8561041, 1.8519747, 1.8549341, 1.8530424, 1.8549353, 1.8473057, 1.8502393, 1.8526511, 1.8528926, 1.8553119, 1.8577763, 1.8589549, 1.8553387, 1.855148, 1.8524469, 1.8584025, 1.8519082, 1.851745, 1.851652, 1.8520689, 1.8491116, 1.8489425, 1.8446085, 1.8417169, 1.8418864, 1.841216, 1.8398496, 1.832804, 1.839421, 1.8376594, 1.8421714, 1.8355638, 1.8319241, 1.8295645, 1.8342642]
#
#
x3 = np.arange(100)
y3 = [2.1057198, 2.0625293, 2.0426211, 2.0297477, 2.013187, 1.9882464, 1.9789182, 1.9630861, 1.9458828, 1.9404342, 1.9296454, 1.9328479, 1.9110514, 1.8977053, 1.8951188, 1.8946826, 1.8802773, 1.892146, 1.8842785, 1.886077, 1.8805205, 1.8730166, 1.8706936, 1.8638839, 1.8663287, 1.8749484, 1.8700346, 1.8657837, 1.864729, 1.8695756, 1.8587817, 1.8627645, 1.8734816, 1.8561105, 1.8587886, 1.8588147, 1.8521069, 1.8492153, 1.8511715, 1.8515908, 1.8457444, 1.8482739, 1.8483098, 1.8467658, 1.8435208, 1.8378851, 1.8458819, 1.8463598, 1.8432931, 1.8383731, 1.842491, 1.8415639, 1.8405983, 1.8375317, 1.836072, 1.8367188, 1.8362298, 1.8382894, 1.8427262, 1.8450035, 1.847852, 1.8487724, 1.8394517, 1.8397628, 1.8322526, 1.8348538, 1.8411064, 1.8385139, 1.8317765, 1.8266121, 1.8293874, 1.8303133, 1.8289001, 1.8300781, 1.828998, 1.8282422, 1.8249848, 1.822948, 1.8241416, 1.8226849, 1.8227847, 1.8255243, 1.8261243, 1.8260952, 1.8267442, 1.826017, 1.8262931, 1.825898, 1.8261682, 1.8260299, 1.8244137, 1.8243619, 1.8169308, 1.8192513, 1.8170822, 1.8192432, 1.8195835, 1.8159274, 1.8163444, 1.8165703]
#
# x4 = np.arange(20)
# y4 = [0.43,0.46,0.52,0.613,0.62,0.65,0.65,0.655,0.69,0.695,0.71,0.715,0.725,0.74,0.74,0.75,0.765,0.77,0.765,0.78]
#
#
#
# x5 = np.arange(20)
# y5 = [0.41, 0.54,0.545,0.58,0.6,0.62,0.65,0.73,0.75,0.765,0.77,0.7725,0.7725,0.78,0.785,0.8,0.79,0.8,0.81,0.81]
#
# x6 = np.arange(20)
# y6 = [0.43,0.46,0.52,0.613,0.62,0.65,0.75,0.755,0.79,0.795,0.81,0.815,0.825,0.84,0.84,0.85,0.865,0.87,0.865,0.85]
#
#
#
# x7 = np.arange(20)
# y7 = [0.28,0.29,0.35,0.4,0.45,0.49,0.5,0.56,0.58,0.6,0.64,0.66,0.65,0.7,0.7,0.73,0.75,0.745,0.745,0.75]
#
# x8 = np.arange(20)
# y8 = [0.21,0.28,0.33,0.5,0.58,0.64,0.68,0.68,0.70,0.70,0.72,0.73,0.78,0.785,0.78,0.805,0.8,0.81,0.80,0.81]






# group_labels =np.arange(100)+1
# plt.title('The value of Accuracy')
# plt.xlabel('Number of iterations')
# plt.ylabel('Accuracy')
# plt.plot(x1, y1, 'b', label='DNN',marker='o')
# # plt.plot(x2, y2, 'r', label='TF-IDF-IG-DNN',marker='^')
# plt.xticks(x1, group_labels, rotation=0)
# plt.yticks(np.arange(0.1,1.1,0.1))
# plt.legend(loc = 'best')
#


group_labels =np.arange(100)+1
plt.title('The value of Loss')
plt.xlabel('Number of iterations')
plt.ylabel('Loss')
plt.plot(x3, y3, 'b', label='DNN',marker='o')
# plt.plot(x4, y4, 'r', label='TF-IDF-IG-DNN',marker='^')
plt.xticks(x1, group_labels, rotation=0)
plt.yticks(np.arange(1.8,2.5,0.01))
plt.legend(loc = 'best')
#
#
# plt.subplot(223)
# group_labels =np.arange(20)+1
# plt.title('The value of Precision of different methods ')
# plt.xlabel('Number of iterations')
# plt.ylabel('Precision')
# plt.plot(x5, y5, 'b', label='TF-DNN',marker='o')
# plt.plot(x6, y6, 'r', label='TF-IDF-IG-DNN',marker='^')
# plt.xticks(x1, group_labels, rotation=0)
# plt.yticks(np.arange(0.1,1.1,0.1))
# plt.legend(loc = 'best')
#
#
# plt.subplot(224)
# group_labels =np.arange(20)+1
# plt.title('The value of F1-score of different methods ')
# plt.xlabel('Number of iterations')
# plt.ylabel('F1-score')
#
#
# # plt.plot(x1, y1,'r', label='broadcast')
# # plt.plot(x2, y2,'b',label='join')
# # plt.xticks(x1, group_labels, rotation=0)
#
# plt.plot(x7, y7, 'b', label='TF-DNN',marker='o')
# plt.plot(x8, y8, 'r', label='TF-IDF-IG-DNN',marker='^')
# plt.xticks(x1, group_labels, rotation=0)
# plt.yticks(np.arange(0.1,1.1,0.1))
# plt.legend(loc = 'best')



#plt.legend(bbox_to_anchor=[0.3, 1],loc='best')
plt.legend(loc = 'best')
fig.tight_layout()
plt.savefig('Figures/Accuracy.jpg')
plt.show()
fig.tight_layout()
